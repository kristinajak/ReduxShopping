{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    amount: 0,\n    changed: false\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.amount = action.payload.amount;\n      state.items = action.payload.items;\n    },\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.changed = true;\n      if (existingItem) {\n        existingItem.quantity += newItem.quantity;\n        existingItem.total = existingItem.price * existingItem.quantity;\n      } else {\n        state.items.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          quantity: newItem.quantity,\n          total: newItem.price\n        });\n      }\n      state.amount++;\n    },\n    reduceItem(state, action) {\n      const itemId = action.payload;\n      const existingItem = state.items.find(item => item.id === itemId);\n      state.changed = true;\n      if (existingItem && existingItem.quantity > 1) {\n        existingItem.quantity--;\n        existingItem.total = existingItem.price * existingItem.quantity;\n      } else {\n        state.items = state.items.filter(item => item.id !== itemId);\n      }\n      state.amount--;\n    },\n    increaseItem(state, action) {\n      const item = state.items.find(item => item.id === action.payload);\n      state.changed = true;\n      item.quantity++;\n      item.total = item.price * item.quantity;\n      state.amount++;\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","amount","changed","reducers","replaceCart","state","action","payload","addToCart","newItem","existingItem","find","item","id","quantity","total","price","push","title","reduceItem","itemId","filter","increaseItem","cartActions","actions","reducer"],"sources":["/Users/jakit/ReactReduxShopping/src/store/cart.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: { items: [], amount: 0, changed: false },\n  reducers: {\n    replaceCart(state, action) {\n      state.amount = action.payload.amount;\n      state.items = action.payload.items;\n    },\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.changed = true;\n\n      if (existingItem) {\n        existingItem.quantity += newItem.quantity;\n        existingItem.total = existingItem.price * existingItem.quantity;\n      } else {\n        state.items.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          quantity: newItem.quantity,\n          total: newItem.price,\n        });\n      }\n\n      state.amount++;\n    },\n    reduceItem(state, action) {\n      const itemId = action.payload;\n      const existingItem = state.items.find((item) => item.id === itemId);\n      state.changed = true;\n\n      if (existingItem && existingItem.quantity > 1) {\n        existingItem.quantity--;\n        existingItem.total = existingItem.price * existingItem.quantity;\n      } else {\n        state.items = state.items.filter((item) => item.id !== itemId);\n      }\n      state.amount--;\n    },\n    increaseItem(state, action) {\n      const item = state.items.find((item) => item.id === action.payload);\n      state.changed = true;\n\n      item.quantity++;\n      item.total = item.price * item.quantity;\n      state.amount++;\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,MAAM,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAM,CAAC;EACtDC,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACJ,MAAM,GAAGK,MAAM,CAACC,OAAO,CAACN,MAAM;MACpCI,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO,CAACP,KAAK;IACpC,CAAC;IACDQ,SAASA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,YAAY,GAAGL,KAAK,CAACL,KAAK,CAACW,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACvER,KAAK,CAACH,OAAO,GAAG,IAAI;MAEpB,IAAIQ,YAAY,EAAE;QAChBA,YAAY,CAACI,QAAQ,IAAIL,OAAO,CAACK,QAAQ;QACzCJ,YAAY,CAACK,KAAK,GAAGL,YAAY,CAACM,KAAK,GAAGN,YAAY,CAACI,QAAQ;MACjE,CAAC,MAAM;QACLT,KAAK,CAACL,KAAK,CAACiB,IAAI,CAAC;UACfJ,EAAE,EAAEJ,OAAO,CAACI,EAAE;UACdK,KAAK,EAAET,OAAO,CAACS,KAAK;UACpBF,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBF,QAAQ,EAAEL,OAAO,CAACK,QAAQ;UAC1BC,KAAK,EAAEN,OAAO,CAACO;QACjB,CAAC,CAAC;MACJ;MAEAX,KAAK,CAACJ,MAAM,EAAE;IAChB,CAAC;IACDkB,UAAUA,CAACd,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAMc,MAAM,GAAGd,MAAM,CAACC,OAAO;MAC7B,MAAMG,YAAY,GAAGL,KAAK,CAACL,KAAK,CAACW,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKO,MAAM,CAAC;MACnEf,KAAK,CAACH,OAAO,GAAG,IAAI;MAEpB,IAAIQ,YAAY,IAAIA,YAAY,CAACI,QAAQ,GAAG,CAAC,EAAE;QAC7CJ,YAAY,CAACI,QAAQ,EAAE;QACvBJ,YAAY,CAACK,KAAK,GAAGL,YAAY,CAACM,KAAK,GAAGN,YAAY,CAACI,QAAQ;MACjE,CAAC,MAAM;QACLT,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACqB,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKO,MAAM,CAAC;MAChE;MACAf,KAAK,CAACJ,MAAM,EAAE;IAChB,CAAC;IACDqB,YAAYA,CAACjB,KAAK,EAAEC,MAAM,EAAE;MAC1B,MAAMM,IAAI,GAAGP,KAAK,CAACL,KAAK,CAACW,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACC,OAAO,CAAC;MACnEF,KAAK,CAACH,OAAO,GAAG,IAAI;MAEpBU,IAAI,CAACE,QAAQ,EAAE;MACfF,IAAI,CAACG,KAAK,GAAGH,IAAI,CAACI,KAAK,GAAGJ,IAAI,CAACE,QAAQ;MACvCT,KAAK,CAACJ,MAAM,EAAE;IAChB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMsB,WAAW,GAAG1B,SAAS,CAAC2B,OAAO;AAC5C,eAAe3B,SAAS,CAAC4B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
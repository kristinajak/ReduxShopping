{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    amount: 0,\n    showCart: false\n  },\n  reducers: {\n    toggleCart(state) {\n      state.showCart = !state.showCart;\n    },\n    addToCart(state, action) {\n      const itemTotal = action.payload.price * action.payload.quantity;\n      state.total += itemTotal;\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n      const existingCartItem = state.items[existingCartItemIndex];\n      let updatedItems;\n      if (existingCartItem) {\n        let updatedItem;\n        updatedItem = {\n          ...existingCartItem,\n          quantity: existingCartItem.quantity + action.item.quantity\n        };\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      } else {\n        updatedItems = state.items.concat(action.item);\n      }\n      state.items.push({\n        ...action.payload,\n        total: itemTotal\n      });\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","amount","showCart","reducers","toggleCart","state","addToCart","action","itemTotal","payload","price","quantity","total","existingCartItemIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","concat","push","cartActions","actions","reducer"],"sources":["/Users/jakit/ReactReduxShopping/src/store/cart.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: { items: [], amount: 0, showCart: false },\n  reducers: {\n    toggleCart(state) {\n      state.showCart = !state.showCart;\n    },\n    addToCart(state, action) {\n      const itemTotal = action.payload.price * action.payload.quantity;\n      state.total += itemTotal;\n\n      const existingCartItemIndex = state.items.findIndex(\n        (item) => item.id === action.item.id\n      );\n\n      const existingCartItem = state.items[existingCartItemIndex];\n\n      let updatedItems;\n\n      if (existingCartItem) {\n        let updatedItem;\n        updatedItem = {\n          ...existingCartItem,\n          quantity: existingCartItem.quantity + action.item.quantity,\n        };\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      } else {\n        updatedItems = state.items.concat(action.item);\n      }\n\n      state.items.push({ ...action.payload, total: itemTotal });\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,MAAM,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAM,CAAC;EACvDC,QAAQ,EAAE;IACRC,UAAUA,CAACC,KAAK,EAAE;MAChBA,KAAK,CAACH,QAAQ,GAAG,CAACG,KAAK,CAACH,QAAQ;IAClC,CAAC;IACDI,SAASA,CAACD,KAAK,EAAEE,MAAM,EAAE;MACvB,MAAMC,SAAS,GAAGD,MAAM,CAACE,OAAO,CAACC,KAAK,GAAGH,MAAM,CAACE,OAAO,CAACE,QAAQ;MAChEN,KAAK,CAACO,KAAK,IAAIJ,SAAS;MAExB,MAAMK,qBAAqB,GAAGR,KAAK,CAACL,KAAK,CAACc,SAAS,CAChDC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKT,MAAM,CAACQ,IAAI,CAACC,EACpC,CAAC;MAED,MAAMC,gBAAgB,GAAGZ,KAAK,CAACL,KAAK,CAACa,qBAAqB,CAAC;MAE3D,IAAIK,YAAY;MAEhB,IAAID,gBAAgB,EAAE;QACpB,IAAIE,WAAW;QACfA,WAAW,GAAG;UACZ,GAAGF,gBAAgB;UACnBN,QAAQ,EAAEM,gBAAgB,CAACN,QAAQ,GAAGJ,MAAM,CAACQ,IAAI,CAACJ;QACpD,CAAC;QACDO,YAAY,GAAG,CAAC,GAAGb,KAAK,CAACL,KAAK,CAAC;QAC/BkB,YAAY,CAACL,qBAAqB,CAAC,GAAGM,WAAW;MACnD,CAAC,MAAM;QACLD,YAAY,GAAGb,KAAK,CAACL,KAAK,CAACoB,MAAM,CAACb,MAAM,CAACQ,IAAI,CAAC;MAChD;MAEAV,KAAK,CAACL,KAAK,CAACqB,IAAI,CAAC;QAAE,GAAGd,MAAM,CAACE,OAAO;QAAEG,KAAK,EAAEJ;MAAU,CAAC,CAAC;IAC3D;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMc,WAAW,GAAGzB,SAAS,CAAC0B,OAAO;AAC5C,eAAe1B,SAAS,CAAC2B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
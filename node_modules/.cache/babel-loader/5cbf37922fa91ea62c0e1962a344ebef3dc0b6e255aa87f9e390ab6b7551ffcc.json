{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    amount: 0\n  },\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (existingItem) {\n        existingItem.quantity += newItem.quantity;\n        existingItem.total = existingItem.price * existingItem.quantity;\n      } else {\n        state.items.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          quantity: newItem.quantity,\n          total: newItem.price\n        });\n      }\n      state.amount++;\n    },\n    reduceItem(state, action) {\n      const itemId = action.payload;\n      const existingItem = state.items.find(item => item.id === itemId);\n      if (existingItem && existingItem.quantity > 1) {\n        existingItem.quantity--;\n        existingItem.total = existingItem.price * existingItem.quantity;\n      } else {\n        state.items = state.items.filter(item => item.id !== itemId);\n      }\n      state.amount--;\n    },\n    increaseItem(state, action) {\n      const item = state.items.find(item => item.id === action.payload);\n      item.quantity++;\n      item.total = item.price * item.quantity;\n      state.amount++;\n    }\n  }\n});\nconst sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-http-3f548-default-rtdb.europe-west1.firebasedatabase.app/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n    };\n    dispatch(uiActions.showNotification({\n      status: \"success\",\n      title: \"Success!\",\n      message: \"Sent cart data successfully\"\n    }));\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","amount","reducers","addToCart","state","action","newItem","payload","existingItem","find","item","id","quantity","total","price","push","title","reduceItem","itemId","filter","increaseItem","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","cartActions","actions","reducer"],"sources":["/Users/jakit/ReactReduxShopping/src/store/cart.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: { items: [], amount: 0 },\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n\n      if (existingItem) {\n        existingItem.quantity += newItem.quantity;\n        existingItem.total = existingItem.price * existingItem.quantity;\n      } else {\n        state.items.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          quantity: newItem.quantity,\n          total: newItem.price,\n        });\n      }\n\n      state.amount++;\n    },\n    reduceItem(state, action) {\n      const itemId = action.payload;\n      const existingItem = state.items.find((item) => item.id === itemId);\n\n      if (existingItem && existingItem.quantity > 1) {\n        existingItem.quantity--;\n        existingItem.total = existingItem.price * existingItem.quantity;\n      } else {\n        state.items = state.items.filter((item) => item.id !== itemId);\n      }\n      state.amount--;\n    },\n    increaseItem(state, action) {\n      const item = state.items.find((item) => item.id === action.payload);\n\n      item.quantity++;\n      item.total = item.price * item.quantity;\n      state.amount++;\n    },\n  },\n});\n\nconst sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://react-http-3f548-default-rtdb.europe-west1.firebasedatabase.app/cart.json\",\n        { method: \"PUT\", body: JSON.stringify(cart) }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n    };\n\n    dispatch(\n      uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent cart data successfully\",\n      })\n    );\n  };\n};\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}